def safe(graph, colors, vertex, c):
    for neighbor in graph[vertex]:
        if colors[neighbor] == c:
            return False
    return True

def coloring(graph, m, colors, vertex=0):
    n = len(graph)
    if vertex == n:
        return True
    for c in range(1, m+1):
        if safe(graph, colors, vertex, c):
            colors[vertex] = c
            if coloring(graph, m, colors, vertex+1):
                return True
            colors[vertex] = 0
    return False

def main():
    print("Введите рёбра:")

    edges = []
    nodes = set()

    while True:
        line = input()
        if not line.strip():
            break
        u, v = map(int, line.split())
        edges.append((u, v))
        nodes.add(u)
        nodes.add(v)

    n = max(nodes)  

    graph = [[] for _ in range(n)]
    for u, v in edges:
        graph[u-1].append(v-1)  
        graph[v-1].append(u-1)

    m = int(input("Введите количество цветов: "))
    colors = [0] * n

    if coloring(graph, m, colors):
        print("Раскраска вершин (вершина: цвет):")
        for i, c in enumerate(colors, start=1):
            print(f"Вершина {i}: цвет {c}")
    else:
        print("Невозможно раскрасить граф в", m, "цветов")

if __name__ == "__main__":
    main()
